% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/select_parent.R
\name{select_parent}
\alias{select_parent}
\title{Selects parents for the next generation of creatures}
\usage{
select_parent(
  score_vec,
  number_of_parents,
  method = "roulette",
  susN = 1,
  tourn_size = 4,
  pop_required
)
}
\arguments{
\item{score_vec}{a positive, numeric vector with length equal to the total population}

\item{number_of_parents}{an integer indicating the number of parents per offspring}

\item{method}{the method of choosing parents, 'roulette', 'rank', 'tournament', and 'sus'}

\item{susN}{if sus is selected how many parents are chosen scholastically}

\item{tourn_size}{if tournament is chosen how many candidates are in the tournament}

\item{pop_required}{number of offspring needed at the start of the next generation}
}
\value{
a numeric vector indexing which parents are reproducing for the next generation
}
\description{
This function's purpose is to take a score vector and to return
a vector of the next generation of parents.  To do this to do this it
the number of parents required per an offspring, and the general
population required. The resulting new_parents vector will be of length
pop_required * number_of_parents.
}
\details{
Roulette Method selects parents randomly with a probability proportional
to their fitness

Rank Method selects parents randomly with a probability proportional to
the rank of their fitness

Tournament uses tourn_size to randomly group that many creatures together.
The most fit in that group becomes a parent.

Stochastic Universal Sampling works like roulette but also selects a
number (susN) more candidates at a fixed width from the first draw to
increase diversity
}
\examples{
score_vec <- abs(rnorm(10))
number_of_parents <-2
pop_required <- 10

new_parents <- select_parent(score_vec = score_vec,
 number_of_parents = number_of_parents,pop_required = pop_required)

}
